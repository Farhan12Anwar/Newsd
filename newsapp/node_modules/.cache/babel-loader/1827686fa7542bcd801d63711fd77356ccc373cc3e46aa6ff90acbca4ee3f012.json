{"ast":null,"code":"var _jsxFileName = \"C:\\\\newsV2\\\\newsapp\\\\src\\\\Components\\\\Glossary.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst glossary = {\n  vulnerability: \"A weakness in software or hardware.\",\n  malware: \"Malicious software designed to harm.\",\n  phishing: \"A fraudulent attempt to obtain sensitive information.\",\n  cve: \"Common Vulnerabilities and Exposures, a unique id for each public cybersecurity vulnerability.\"\n};\nfunction Glossary({\n  text\n}) {\n  // For demo, show a list of terms found in `text`\n  const terms = Object.keys(glossary).filter(term => text.toLowerCase().includes(term));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: terms.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: terms.map(term => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: term\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), \": \", glossary[term]]\n      }, term, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Glossary;\nexport default Glossary;\nvar _c;\n$RefreshReg$(_c, \"Glossary\");","map":{"version":3,"names":["glossary","vulnerability","malware","phishing","cve","Glossary","text","terms","Object","keys","filter","term","toLowerCase","includes","_jsxDEV","children","length","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/newsV2/newsapp/src/Components/Glossary.js"],"sourcesContent":["const glossary = {\r\n  vulnerability: \"A weakness in software or hardware.\",\r\n  malware: \"Malicious software designed to harm.\",\r\n  phishing: \"A fraudulent attempt to obtain sensitive information.\",\r\n  cve: \"Common Vulnerabilities and Exposures, a unique id for each public cybersecurity vulnerability.\"\r\n};\r\n\r\nfunction Glossary({ text }) {\r\n  // For demo, show a list of terms found in `text`\r\n  const terms = Object.keys(glossary).filter(term =>\r\n    text.toLowerCase().includes(term)\r\n  );\r\n  return (\r\n    <div>\r\n      {terms.length > 0 && (\r\n        <ul>\r\n          {terms.map(term => (\r\n            <li key={term}>\r\n              <strong>{term}</strong>: {glossary[term]}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Glossary;\r\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG;EACfC,aAAa,EAAE,qCAAqC;EACpDC,OAAO,EAAE,sCAAsC;EAC/CC,QAAQ,EAAE,uDAAuD;EACjEC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC1B;EACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC,CAACU,MAAM,CAACC,IAAI,IAC7CL,IAAI,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAClC,CAAC;EACD,oBACEG,OAAA;IAAAC,QAAA,EACGR,KAAK,CAACS,MAAM,GAAG,CAAC,iBACfF,OAAA;MAAAC,QAAA,EACGR,KAAK,CAACU,GAAG,CAACN,IAAI,iBACbG,OAAA;QAAAC,QAAA,gBACED,OAAA;UAAAC,QAAA,EAASJ;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACrB,QAAQ,CAACW,IAAI,CAAC;MAAA,GADjCA,IAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACC,EAAA,GAlBQjB,QAAQ;AAoBjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}