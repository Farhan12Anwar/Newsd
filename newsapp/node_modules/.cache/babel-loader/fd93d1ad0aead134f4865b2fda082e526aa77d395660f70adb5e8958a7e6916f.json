{"ast":null,"code":"var _jsxFileName = \"C:\\\\newsV2\\\\newsapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// API endpoints assumed for demonstration purposes:\n// GET /api/news-types -> returns array of news types (e.g. [\"general\", \"dataBreach\", ...])\n// GET /api/news?type={newsType} -> returns news articles for a type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CyberNewsApp() {\n  _s();\n  const [newsTypes, setNewsTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [newsList, setNewsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch news types on component mount\n  useEffect(() => {\n    async function fetchNewsTypes() {\n      try {\n        const res = await fetch(\"/api/news-types\");\n        const data = await res.json();\n        setNewsTypes(data);\n      } catch (err) {\n        setError(\"Failed to load news types.\");\n      }\n    }\n    fetchNewsTypes();\n  }, []);\n\n  // Fetch news for selected type\n  useEffect(() => {\n    if (!selectedType) return;\n    setLoading(true);\n    setError(null);\n    async function fetchNews() {\n      try {\n        const res = await fetch(`/api/news?type=${encodeURIComponent(selectedType)}`);\n        const data = await res.json();\n        setNewsList(data);\n      } catch (err) {\n        setError(\"Failed to load news.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchNews();\n  }, [selectedType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cyber Security News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsTypeSelect\",\n        children: \"Select News Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"newsTypeSelect\",\n        value: selectedType,\n        onChange: e => setSelectedType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Choose --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), newsTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading news...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [newsList.length === 0 && !loading && selectedType && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No news found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 63\n      }, this), newsList.map(news => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: \"1px solid #ccc\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: news.headlines\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 16\n          }, this), \" \", news.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 16\n          }, this), \" \", news.newsDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: news.newsImgURL,\n          alt: \"news\",\n          style: {\n            maxWidth: \"200px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: news.fullNews\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: news.newsURL,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Read full article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, news.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CyberNewsApp, \"3DFhdj9PDh4v+UmAlpBsM2bWUWE=\");\n_c = CyberNewsApp;\nexport default CyberNewsApp;\nvar _c;\n$RefreshReg$(_c, \"CyberNewsApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CyberNewsApp","_s","newsTypes","setNewsTypes","selectedType","setSelectedType","newsList","setNewsList","loading","setLoading","error","setError","fetchNewsTypes","res","fetch","data","json","err","fetchNews","encodeURIComponent","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","type","color","marginTop","length","news","borderBottom","marginBottom","headlines","author","newsDate","src","newsImgURL","alt","maxWidth","fullNews","href","newsURL","rel","_c","$RefreshReg$"],"sources":["C:/newsV2/newsapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// API endpoints assumed for demonstration purposes:\n// GET /api/news-types -> returns array of news types (e.g. [\"general\", \"dataBreach\", ...])\n// GET /api/news?type={newsType} -> returns news articles for a type\n\nfunction CyberNewsApp() {\n  const [newsTypes, setNewsTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [newsList, setNewsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch news types on component mount\n  useEffect(() => {\n    async function fetchNewsTypes() {\n      try {\n        const res = await fetch(\"/api/news-types\");\n        const data = await res.json();\n        setNewsTypes(data);\n      } catch (err) {\n        setError(\"Failed to load news types.\");\n      }\n    }\n    fetchNewsTypes();\n  }, []);\n\n  // Fetch news for selected type\n  useEffect(() => {\n    if (!selectedType) return;\n    setLoading(true);\n    setError(null);\n    async function fetchNews() {\n      try {\n        const res = await fetch(`/api/news?type=${encodeURIComponent(selectedType)}`);\n        const data = await res.json();\n        setNewsList(data);\n      } catch (err) {\n        setError(\"Failed to load news.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchNews();\n  }, [selectedType]);\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial, sans-serif\" }}>\n      <h1>Cyber Security News</h1>\n\n      <div>\n        <label htmlFor=\"newsTypeSelect\">Select News Type: </label>\n        <select\n          id=\"newsTypeSelect\"\n          value={selectedType}\n          onChange={(e) => setSelectedType(e.target.value)}\n        >\n          <option value=\"\">-- Choose --</option>\n          {newsTypes.map((type) => (\n            <option key={type} value={type}>\n              {type}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {loading && <p>Loading news...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <div style={{ marginTop: \"20px\" }}>\n        {newsList.length === 0 && !loading && selectedType && <p>No news found.</p>}\n\n        {newsList.map((news) => (\n          <div key={news.id} style={{ borderBottom: \"1px solid #ccc\", marginBottom: \"10px\" }}>\n            <h3>{news.headlines}</h3>\n            <p><b>Author:</b> {news.author}</p>\n            <p><b>Date:</b> {news.newsDate}</p>\n            <img src={news.newsImgURL} alt=\"news\" style={{ maxWidth: \"200px\" }} />\n            <p>{news.fullNews}</p>\n            <a href={news.newsURL} target=\"_blank\" rel=\"noopener noreferrer\">Read full article</a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CyberNewsApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}